# regular expression

\A : the resultant is a match if the input characters are at the beginning of the string
\b : the resultant is a match wheter the input are the beginning or at the end.EncodingWarning
\d : the resultant is a match of a string if it is containing a digits
\s : the resultant is a match of a string contains white space characters

' . ' : Matches any single character except new line  
'$' : Matches at the end of the string 
' *' Matches zero or more repetitions 
'+ '  Matches 1 or more repetitions 
'{}' Matches an explicitly specified number of repitation
'[] ' Matches Specifies a character class 
| Either or 
() Capture and group

1.Create a BUS child class that inherits From the VEHICLE class
the default fare charge of any vehicle is "seating capacity * 100"
if vehicle is bus instance we need to add extra 10% on full fare as a maintaince charge. So total fare for the bus instance will become the 
final amount = total fare + 10% of the total fare

Note : the bus seating capacity is 50 so the final fare amount should be 5500 you need to override the fare() method of a vehicle class in Bus class


class Vehicle:
    def __init__(self,name,mileage,capacity):
        self.name=name
        self.mileage=mileage
        self.capacity=capacity

    def fare(self):
        return self.capacity*100
    
class Bus(Vehicle):
    
    def fare(self)
        amount=super().fare()
        #amount=5000
        interest= amount*10/100
        total =amount+interest
        return total

scholbus=Bus("volvo bus",12,50)
print("total bus fare is ",scholbus.fare())

o/p:total bus fare is 5500